package Algorithms;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.GridLayout;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class EightQueensUI extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					EightQueensUI frame = new EightQueensUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public EightQueensUI() {
	    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    setBounds(100, 100, 600, 650); // Extra height for button
	    setResizable(false);

	    // Main container using BorderLayout
	    contentPane = new JPanel();
	    contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
	    contentPane.setLayout(new BorderLayout(10, 10)); // margin between grid and button
	    setContentPane(contentPane);

	    // Chessboard grid
	    JPanel gridPanel = new JPanel(new GridLayout(8, 8, 2, 2));

	    for (int row = 0; row < 8; row++) {
	        for (int col = 0; col < 8; col++) {
	            JPanel cell = new JPanel();
	            if ((row + col) % 2 == 0) {
	                cell.setBackground(Color.WHITE);
	            } else {
	                cell.setBackground(Color.DARK_GRAY);
	            }
	            cell.setBorder(BorderFactory.createLineBorder(Color.BLACK));
	            gridPanel.add(cell);
	        }
	    }

	    contentPane.add(gridPanel, BorderLayout.CENTER);

	    // Start button
	    JButton startButton = new JButton("Start");
	    startButton.addActionListener(e -> {
	        System.out.println("Solving Eight Queens...");
	        // üîÅ You can call your solve() method here later
	    });
	    contentPane.add(startButton, BorderLayout.SOUTH);
	}

}
